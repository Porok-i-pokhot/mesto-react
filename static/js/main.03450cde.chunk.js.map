{"version":3,"sources":["images/close-icon.svg","images/header-logo.svg","images/edit-avatar.svg","images/edit-button.svg","images/add-button.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","name","likes","link","owner","_id","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","cardDeleteButtonClassName","isLiked","some","item","cardLikeButtonClassName","onClick","style","backgroundImage","type","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","editAvatarImage","editButtonImage","about","addButtonImage","map","key","Footer","PopupWithForm","title","buttonTitle","children","isOpen","onClose","onSubmit","handlerEscKeydown","evt","useEffect","document","addEventListener","removeEventListener","target","classList","contains","closeIcon","action","noValidate","ImagePopup","card","api","baseUrl","headers","this","fetch","method","then","res","ok","json","Promise","reject","status","data","body","JSON","stringify","id","putLike","deleteLike","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","preventDefault","placeholder","required","minLength","maxLength","autoComplete","value","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","finally","ref","AddPlacePopup","setTitle","setLink","console","log","App","setCards","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","isImagePopupOpen","setImagePopupOpen","setCurrentUser","getUserInfo","userData","catch","err","closeAllPopups","getInitialCards","initialCards","Provider","cardData","changeLikeCardStatus","newCard","newCards","cardId","deleteCard","filter","newDataOfUser","setEditedUserInfo","newUserData","newDataOfAvatar","changeAvatar","newAvatarData","newDataOfCard","addNewCard","newCardData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,yKCW5BC,MARf,WACI,OACI,4BAAQC,UAAU,UACd,yBAAKC,IAAKC,IAAYF,UAAU,eAAeG,IAAI,0E,iDCJlDC,EAAqBC,IAAMC,gBCyCzBC,MAxCf,YAAuF,IAAxEC,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aAE7DC,EAAcX,IAAMY,WAAWb,GAE/Bc,EAAQP,EAAMC,MAAQI,EAAYJ,IAElCO,EAAyB,0BACRD,EAAQ,GAAK,wBAG9BE,EAAUX,EAAMY,MAAK,SAAAC,GAAI,OAAIA,EAAKV,MAAQI,EAAYJ,OAEtDW,EAAuB,wBAAoBH,EAAW,uBAAyB,IAcrF,OACQ,yBAAKpB,UAAU,WACX,4BAAQA,UAAWmB,EAA2BK,QAN1D,WACIT,EAAaH,MAML,yBAAKZ,UAAU,iBAAiByB,MAAO,CAAEC,gBAAgB,OAAD,OAAShB,EAAT,MAAoBc,QAfxF,WACIX,EAAY,CAACH,OAAMF,YAeX,yBAAKR,UAAU,iBACX,wBAAIA,UAAU,kBAAkBQ,GAChC,yBAAKR,UAAU,2BACX,4BAAQ2B,KAAK,SAAS3B,UAAWuB,EAAyBC,QAf9E,WACIV,EAAW,CAACL,QAAOG,WAeH,uBAAGZ,UAAU,2BAA2BS,EAAMmB,YCgBvDC,MA9Cf,YAAwG,IAAzFC,EAAwF,EAAxFA,cAAeC,EAAyE,EAAzEA,WAAYC,EAA6D,EAA7DA,aAAcnB,EAA+C,EAA/CA,YAAaoB,EAAkC,EAAlCA,MAAOnB,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aAE9EC,EAAcX,IAAMY,WAAWb,GAErC,OACI,0BAAMJ,UAAU,WAEZ,6BAASA,UAAU,WAEf,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,4BAA4BwB,QAASQ,GAChD,yBAAK/B,IAAKe,EAAYkB,OAAQlC,UAAU,kBAAkBG,IAAI,yCAC9D,yBAAKH,UAAU,kCACX,yBAAKC,IAAKkC,IAAiBhC,IAAI,uDAGvC,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAiBgB,EAAYR,MAC3C,4BAAQR,UAAU,+BAA+B2B,KAAK,SAASH,QAASM,GACpE,yBAAK7B,IAAKmC,IAAiBjC,IAAI,uDAGvC,uBAAGH,UAAU,uBAAuBgB,EAAYqB,SAGxD,4BAAQrC,UAAU,8BAA8B2B,KAAK,SAASH,QAASO,GACnE,yBAAK9B,IAAKqC,IAAgBtC,UAAU,wBAAwBG,IAAI,wDAIxE,6BAASH,UAAU,YACdiC,EAAMM,KAAI,SAACjB,GAAD,OACP,kBAAC,EAAD,eAAMkB,IAAKlB,EAAKV,KACNU,EADV,CAEMT,YAAaA,EACbC,WAAYA,EACZC,aAAcA,WClCzB0B,MARf,WACI,OACI,4BAAQzC,UAAU,UACd,uBAAGA,UAAU,gBAAb,4B,gBCyCG0C,MA3Cf,YAAyF,IAAjEC,EAAgE,EAAhEA,MAAOnC,EAAyD,EAAzDA,KAAMoC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,SAEnEC,EAAoB,SAACC,GACP,WAAZA,EAAIV,KACJO,KAoBR,OAfA1C,IAAM8C,WAAU,WAER,OADJC,SAASC,iBAAiB,UAAWJ,GAC3B,WACLG,SAASE,oBAAoB,UAAWL,OAa7C,yBAAKjD,UAAS,sBAAiBQ,EAAjB,YAAyBsC,EAAS,eAAiB,IAAMtB,QAR/C,SAAC0B,GACTA,EAAIK,OAAOC,UAAUC,SAAS,UAE1CV,MAMA,yBAAK/C,UAAU,oBACX,4BAAQA,UAAU,4BAA4B2B,KAAK,SAASH,QAASuB,GACjE,yBAAK9C,IAAKyD,IAAW1D,UAAU,0BAA0BG,IAAI,gDAEjE,wBAAIH,UAAU,gBAAgB2C,GAC9B,0BAAM3C,UAAU,cAAc2D,OAAO,IAAInD,KAAMA,EAAMoD,YAAU,EAACZ,SAAUA,GACrEH,EACD,4BAAQlB,KAAK,SACL3B,UAAU,yDACVwB,QAASuB,GAAUH,OCKhCiB,MAvCf,YAA8C,IAAzBC,EAAwB,EAAxBA,KAAMhB,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAEzBE,EAAoB,SAACC,GACP,WAAZA,EAAIV,KACJO,KAoBR,OAfA1C,IAAM8C,WAAU,WAEZ,OADAC,SAASC,iBAAiB,UAAWJ,GAC/B,WACFG,SAASE,oBAAoB,UAAWL,OAa5C,yBAAKjD,UAAS,iCAA4B8C,EAAS,eAAiB,IAAMtB,QARlD,SAAC0B,GACTA,EAAIK,OAAOC,UAAUC,SAAS,UAE1CV,MAMA,yBAAK/C,UAAU,wBACX,4BAAQA,UAAU,4BAA4B2B,KAAK,SAASH,QAASuB,GACjE,yBAAK9C,IAAKyD,IAAW1D,UAAU,0BAA0BG,IAAI,gDAEjE,4BAAQH,UAAU,sBACd,yBAAKA,UAAU,eAAeC,IAAK6D,EAAKpD,KAAMP,IAAK2D,EAAKtD,OACxD,gCAAYR,UAAU,oBAAoB8D,EAAKtD,U,gBC8FtDuD,EAAM,I,WAjIjB,cAAiC,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QAAU,oBAC9BC,KAAKF,QAAUA,EACfE,KAAKD,QAAUA,E,8DAKf,OAAOE,MAAM,GAAD,OAAID,KAAKF,QAAT,UAA0B,CACpCI,OAAQ,MACRH,QAASC,KAAKD,UAEbI,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAMzC,OAAOR,MAAM,GAAD,OAAID,KAAKF,QAAT,aAA6B,CACvCI,OAAQ,MACRH,QAASC,KAAKD,UAEbI,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,wCAIzBC,GAChB,OAAOT,MAAM,GAAD,OAAID,KAAKF,QAAT,aAA6B,CACvCI,OAAQ,QACRH,QAASC,KAAKD,QACdY,KAAMC,KAAKC,UAAU,CACnBvE,KAAMoE,EAAKpE,KACX6B,MAAOuC,EAAKvC,UAGbgC,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAIhCC,GAET,OAAOT,MAAM,GAAD,OAAID,KAAKF,QAAT,UAA0B,CACpCI,OAAQ,OACRH,QAASC,KAAKD,QACdY,KAAMC,KAAKC,UAAU,CACnBvE,KAAMoE,EAAKpE,KACXE,KAAMkE,EAAKlE,SAGZ2D,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,mCAI9BC,GACX,OAAOT,MAAM,GAAD,OAAID,KAAKF,QAAT,oBAAoC,CAC9CI,OAAQ,QACRH,QAASC,KAAKD,QACdY,KAAMC,KAAKC,UAAU,CACnB7C,OAAQ0C,EAAK1C,WAGdmC,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,8BAInCK,GACN,OAAOb,MAAM,GAAD,OAAID,KAAKF,QAAT,wBAAgCgB,GAAM,CAChDZ,OAAQ,MACRH,QAASC,KAAKD,UAEbI,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAIhCK,GACT,OAAOb,MAAM,GAAD,OAAID,KAAKF,QAAT,wBAAgCgB,GAAM,CAChDZ,OAAQ,SACRH,QAASC,KAAKD,UAEbI,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,2CAItBK,EAAI5D,GACrB,OAAOA,EAAU8C,KAAKe,QAAQD,GAAMd,KAAKgB,WAAWF,K,iCAG7CA,GACT,OAAOb,MAAM,GAAD,OAAID,KAAKF,QAAT,kBAA0BgB,GAAM,CAC1CZ,OAAQ,SACRH,QAASC,KAAKD,UAEbI,MAAK,SAACC,GACL,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAM1B,CAAQ,CACvBX,QAAS,8CACTC,QAAS,CACLkB,cAAe,uCACf,eAAgB,sBCzETC,MAxDf,YAA4D,IAAjCtC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAASsC,EAAe,EAAfA,aAAe,EAE/BhF,IAAMiF,SAAS,IAFgB,mBAEhD9E,EAFgD,KAE1C+E,EAF0C,OAGjBlF,IAAMiF,SAAS,IAHE,mBAGhDE,EAHgD,KAGnCC,EAHmC,KAKjDzE,EAAcX,IAAMY,WAAWb,GAyBrC,OAvBAC,IAAM8C,WAAU,WACZoC,EAAQvE,EAAYR,MACpBiF,EAAezE,EAAYqB,SAC5B,CAACrB,IAqBA,kBAAC,EAAD,CACI2B,MAAM,4HACNnC,KAAK,eACLoC,YAAY,yDACZE,OAAQA,EACRC,QAASA,EACTC,SAjBR,SAAsBE,GAClBA,EAAIwC,iBAEJL,EAAa,CACT7E,KAAMA,EACN6B,MAAOmD,KAaP3C,SACI,oCACI,2BAAO7C,UAAU,sCAAsC2B,KAAK,OAAOgE,YAAY,qBACxEnF,KAAK,OAAOoF,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,aAAa,MAC/DC,MAAOxF,EAAMyF,SA9BpC,SAA0B/C,GACtBqC,EAAQrC,EAAIK,OAAOyC,UA8BP,0BAAMhB,GAAG,eAET,2BAAOhF,UAAU,4CAA4C2B,KAAK,OAC3DgE,YAAY,kCAASnF,KAAK,MAAMoF,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMC,aAAa,MACpFC,MAAOR,EAAaS,SA/B3C,SAAiC/C,GAC7BuC,EAAevC,EAAIK,OAAOyC,UA+Bd,0BAAMhB,GAAG,kBCVdkB,MAxCf,YAA6D,IAAnCpD,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASoD,EAAiB,EAAjBA,eAEjCC,EAAW/F,IAAMgG,SAiBvB,OACI,kBAAC,EAAD,CACI1D,MAAM,wFACNnC,KAAK,cACLoC,YAAY,yDACZE,OAAQA,EACRC,QAASA,EACTC,SAlBR,SAAsBE,GAClBA,EAAIwC,iBACgBS,EAAe,CAC/BjE,OAAQkE,EAASE,QAAQN,QAGjBO,SAAQ,WATpBH,EAASE,QAAQN,MAAQ,OAsBrBnD,SACI,oCACI,2BAAO7C,UAAU,sCAAsC2B,KAAK,MAAMgE,YAAY,yFACvEnF,KAAK,SAASoF,UAAQ,EAACG,aAAa,MAAMS,IAAKJ,IACtD,0BAAMpB,GAAG,qBCyBdyB,MAxDf,YAAuD,IAA/B3D,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,QAAShB,EAAa,EAAbA,WAAa,EAExB1B,IAAMiF,SAAS,IAFS,mBAE3C3C,EAF2C,KAEpC+D,EAFoC,OAG1BrG,IAAMiF,SAAS,IAHW,mBAG3C5E,EAH2C,KAGrCiG,EAHqC,KAgClD,OACI,kBAAC,EAAD,CACIhE,MAAM,gEACNnC,KAAK,WACLoC,YAAY,yDACZE,OAAQA,EACRC,QAASA,EACTC,SApBR,SAAsBE,GAClBA,EAAIwC,iBAEgB3D,EAAW,CAC3BvB,KAAMmC,EACNjC,KAAMA,IAGE6F,SAAQ,WAbpBK,QAAQC,IAAI,OACZH,EAAS,IACTC,EAAQ,QAwBJ9D,SACI,oCACI,2BAAO7C,UAAU,uCAAuC2B,KAAK,OAAOgE,YAAY,mDAAWnF,KAAK,QACzFoF,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,aAAa,MAAME,SAtChF,SAA2B/C,GACvBwD,EAASxD,EAAIK,OAAOyC,UAsCR,0BAAMhB,GAAG,gBAET,2BAAOhF,UAAU,sCAAsC2B,KAAK,MAAMgE,YAAY,qGACvEnF,KAAK,OAAOoF,UAAQ,EAACG,aAAa,MAAME,SAtC/D,SAA0B/C,GACtByD,EAAQzD,EAAIK,OAAOyC,UAsCP,0BAAMhB,GAAG,mBC0Hd8B,MAhKf,WAAgB,IAAD,EAEazG,IAAMiF,SAAS,IAF5B,mBAENrD,EAFM,KAEC8E,EAFD,OAI6C1G,IAAMiF,UAAS,GAJ5D,mBAIN0B,EAJM,KAIkBC,EAJlB,OAKuC5G,IAAMiF,UAAS,GALtD,mBAKN4B,EALM,KAKeC,EALf,OAM2C9G,IAAMiF,UAAS,GAN1D,mBAMN8B,EANM,KAMiBC,EANjB,OAO2BhH,IAAMiF,SAAS,IAP1C,mBAONgC,EAPM,KAOQC,EAPR,OAQiClH,IAAMiF,UAAS,GARhD,mBAQNkC,EARM,KAQYC,EARZ,OAUyBpH,IAAMiF,SAAS,IAVxC,mBAUNtE,EAVM,KAUO0G,EAVP,KAYbrH,IAAM8C,WAAU,WACGY,EAAI4D,cAGhBtD,MAAK,SAACuD,GACTF,EAAeE,MAEZC,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,EAAM,sFAEvB,IAEH,IAiBMC,EAAiB,WACrBd,GAAwB,GACxBE,GAAqB,GACrBE,GAAuB,GACvBI,GAAkB,IAwEpB,OAXApH,IAAM8C,WAAU,WACIY,EAAIiE,kBAEjB3D,MAAK,SAAC4D,GANXlB,EAOkBkB,MAEbJ,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,EAAM,sFAEvB,IAGD,kBAAC1H,EAAmB8H,SAApB,CAA6BlC,MAAOhF,GAEpC,yBAAKhB,UAAU,QACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,mBAEb,kBAAC,EAAD,CACI8B,cAlGqB,WAC7BmF,GAAwB,IAkGhBlF,WA/FkB,WAC1BoF,GAAqB,IA+FbnF,aAxGoB,WAC5BqF,GAAuB,IAwGfxG,YA7Fc,SAACsH,GACvBV,GAAkB,GAClBF,EAAgBY,IA4FRlG,MAAOA,EACPnB,WAnDV,YAAuC,IAAdL,EAAa,EAAbA,MAAOG,EAAM,EAANA,IACxBQ,EAAUX,EAAMY,MAAK,SAAAC,GAAI,OAAIA,EAAKV,MAAQI,EAAYJ,OAC5DmD,EAAIqE,qBAAqBxH,GAAMQ,GAASiD,MAAK,SAACgE,GAE5C,IAAMC,EAAWrG,EAAMM,KAAI,SAACjB,GAAD,OAAUA,EAAKV,MAAQA,EAAMyH,EAAU/G,KAElEyF,EAASuB,MACPT,OAAM,SAACC,GACTlB,QAAQC,IAAIiB,EAAM,qFA4CZ/G,aAxCV,SAA0BwH,GACxBxE,EAAIyE,WAAWD,GAAQlE,MAAK,WAC1B,IAAMiE,EAAWrG,EAAMwG,QAAO,SAACnH,GAAD,OAAUA,EAAKV,MAAQ2H,KACrDxB,EAASuB,MACPT,OAAM,SAACC,GACTlB,QAAQC,IAAIiB,EAAM,uFAsChB,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAkBhF,OAAQkE,EAAwBjE,QAASgF,EAAgB1C,aAzFjF,SAA0BqD,GACxB3E,EAAI4E,kBAAkBD,GACjBrE,MAAK,SAACuE,GACLlB,EAAekB,GACfb,OAEDF,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,EAAM,uFAoFpB,kBAAC,EAAD,CAAiBhF,OAAQsE,EAAuBrE,QAASgF,EAAgB5B,eAvE/E,SAA4B0C,GAS1B,OARmB9E,EAAI+E,aAAaD,GAC/BxE,MAAK,SAAC0E,GACLrB,EAAeqB,GACfhB,OAEDF,OAAM,SAACC,GACNlB,QAAQC,IAAIiB,EAAM,uFAkEpB,kBAAC,EAAD,CAAehF,OAAQoE,EAAqBnE,QAASgF,EAAgBhG,WAjF3E,SAA8BiH,GAK5B,OAJmBjF,EAAIkF,WAAWD,GAC7B3E,MAAK,SAAC6E,GACLnC,EAAS,GAAD,mBAAK9E,GAAL,CAAYiH,WAiFtB,kBAAC,EAAD,CACIvG,MAAM,2DACNnC,KAAK,iBACLoC,YAAY,iBAGhB,kBAAC,EAAD,CAAYkB,KAAMwD,EAAcxE,OAAQ0E,EAAkBzE,QAASgF,QCvJvDoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtG,SAASuG,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzF,MAAK,SAAA0F,GACJA,EAAaC,gBAEdnC,OAAM,SAAAoC,GACLrD,QAAQqD,MAAMA,EAAMC,c","file":"static/js/main.03450cde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close-icon.5df32a06.svg\";","module.exports = __webpack_public_path__ + \"static/media/header-logo.aee9f1cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-avatar.528e1714.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-button.0e6f395d.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-button.b2fce4ac.svg\";","import React from \"react\";\nimport headerLogo from \"../images/header-logo.svg\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img src={headerLogo} className=\"header__logo\" alt=\"Место Россия\"/>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({name, likes, link, owner, _id, onCardClick, onCardLike, onCardDelete}) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const isOwn = owner._id === currentUser._id;\n\n    const cardDeleteButtonClassName =\n        `element__delete ${isOwn ? '' : 'element__delete_hide'}`\n    ;\n\n    const isLiked = likes.some(item => item._id === currentUser._id);\n\n    const cardLikeButtonClassName = `element__like ${isLiked ?  'element__like_active' : ''}`;\n\n    function handleClick() {\n        onCardClick({link, name});\n    }\n    \n    function handleLikeClick() {\n        onCardLike({likes, _id});\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(_id);\n    }\n\n    return(\n            <div className=\"element\">\n                <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}/>\n                <div className=\"element__image\" style={{ backgroundImage: `url(${link})` }} onClick={handleClick}/>\n                <div className=\"element__info\">\n                    <h2 className=\"element__title\">{name}</h2>\n                    <div className=\"element__like-container\">\n                        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}/>\n                        <p className=\"element__likes-quantity\">{likes.length}</p>\n                    </div>\n                </div>\n            </div>\n    )\n}\nexport default Card;","import React from \"react\";\nimport editAvatarImage from '../images/edit-avatar.svg';\nimport editButtonImage from '../images/edit-button.svg';\nimport addButtonImage from '../images/add-button.svg';\nimport Card from './Card.js';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete}) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return(\n        <main className=\"content\">\n\n            <section className=\"profile\">\n\n                <div className=\"profile__container\">\n                    <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\n                        <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"аватар\"/>\n                        <div className=\"profile__edit-avatar-container\">\n                            <img src={editAvatarImage} alt=\"карандаш\"/>\n                        </div>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__main-information\">\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\n                            <button className=\"profile__edit-button defocus\" type=\"button\" onClick={onEditProfile}>\n                                <img src={editButtonImage} alt=\"карандаш\"/>\n                            </button>\n                        </div>\n                        <p className=\"profile__occupation\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__add-button defocus\" type=\"button\" onClick={onAddPlace}>\n                    <img src={addButtonImage} className=\"profile__vector-image\" alt=\"знак плюс\"/>\n                </button>\n            </section>\n\n            <section className=\"elements\">\n                {cards.map((item) => (\n                    <Card key={item._id}\n                          {...item}\n                          onCardClick={onCardClick}\n                          onCardLike={onCardLike}\n                          onCardDelete={onCardDelete}/>\n                    )\n                )}\n            </section>\n\n        </main>\n    )\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer() {\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport closeIcon from '../images/close-icon.svg';\n\nfunction PopupWithForm({title, name, buttonTitle, children, isOpen, onClose, onSubmit}) {\n\n    const handlerEscKeydown = (evt) => {\n        if (evt.key === \"Escape\") {\n            onClose();\n        }\n    }\n\n    //закрытие попапа по нажатию на Esc\n    React.useEffect(() => {\n        document.addEventListener('keydown', handlerEscKeydown);\n            return() => {\n             document.removeEventListener('keydown', handlerEscKeydown);\n         }\n    });\n\n    //закрытие попапо по клику на оверлэй\n    const handlerOverlayClick = (evt) => {\n        const isPopup = evt.target.classList.contains('popup');\n        if(isPopup) {\n            onClose();\n        }\n    };\n\n    return (\n        <div className={`popup popup_${name} ${isOpen ? 'popup_opened' : ''}`} onClick={handlerOverlayClick}>\n            <div className=\"popup__container\">\n                <button className=\"popup__close-icon defocus\" type=\"button\" onClick={onClose}>\n                    <img src={closeIcon} className=\"popup__close-icon-image\" alt=\"крестик\"/>\n                </button>\n                <h2 className=\"popup__title\">{title}</h2>\n                <form className=\"popup__form\" action=\"#\" name={name} noValidate onSubmit={onSubmit}>\n                    {children}\n                    <button type=\"submit\"\n                            className=\"popup__form-button popup__form-button_disabled defocus\"\n                            onClick={onClose}>{buttonTitle}\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport closeIcon from '../images/close-icon.svg';\n\n\nfunction ImagePopup({card, isOpen, onClose}) {\n\n    const handlerEscKeydown = (evt) => {\n        if (evt.key === \"Escape\") {\n            onClose();\n        }\n    }\n\n    //закрытие попапа по нажатию на Esc\n    React.useEffect(() => {\n        document.addEventListener('keydown', handlerEscKeydown);\n        return() => {\n            document.removeEventListener('keydown', handlerEscKeydown);\n        }\n    });\n\n    //закрытие попапо по клику на оверлэй\n    const handlerOverlayClick = (evt) => {\n        const isPopup = evt.target.classList.contains('popup');\n        if(isPopup) {\n            onClose();\n        }\n    };\n\n    return (\n        <div className={`popup popup_show-image ${isOpen ? 'popup_opened' : ''}`} onClick={handlerOverlayClick}>\n            <div className=\"popup__container-img\">\n                <button className=\"popup__close-icon defocus\" type=\"button\" onClick={onClose}>\n                    <img src={closeIcon} className=\"popup__close-icon-image\" alt=\"крестик\"/>\n                </button>\n                <figure className=\"popup__shell-image\">\n                    <img className=\"popup__image\" src={card.link} alt={card.name}/>\n                    <figcaption className=\"popup__title-img\">{card.name}</figcaption>\n                </figure>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup;","export default class Api {\n  constructor({baseUrl, headers}) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  getInitialCards() {\n\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  getUserInfo() {\n\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  setEditedUserInfo(data) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  addNewCard(data) {\n      debugger\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      })\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  putLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  deleteLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n      return isLiked ? this.putLike(id) : this.deleteLike(id);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n      .then((res) => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n    headers: {\n        authorization: 'c4aab964-a0d5-47da-a56b-0a1454d3e9d4',\n        'Content-Type': 'application/json'\n    }\n});\n","import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleChangeName(evt) {\n        setName(evt.target.value);\n    }\n\n    function handleChangeDescription(evt) {\n        setDescription(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        onUpdateUser({\n            name: name,\n            about: description\n        });\n\n    }\n\n    return (\n        <PopupWithForm\n            title='Редактировать профиль'\n            name='edit-profile'\n            buttonTitle='Сохранить'\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup__input popup__input_type_name\" type=\"text\" placeholder=\"Имя\"\n                           name=\"name\" required minLength=\"2\" maxLength=\"40\" autoComplete=\"off\"\n                           value={name} onChange={handleChangeName}/>\n                    <span id='name-error'/>\n\n                    <input className=\"popup__input popup__input_type_occupation\" type=\"text\"\n                           placeholder=\"О себе\" name=\"job\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\"\n                           value={description} onChange={handleChangeDescription}/>\n                    <span id='job-error'/>\n\n                </>\n            }\n        />\n    )\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n\n    const inputRef = React.useRef();\n\n    function resetInputs() {\n        inputRef.current.value = '';\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        const editPromise = onUpdateAvatar({\n            avatar: inputRef.current.value\n        });\n\n        editPromise.finally(() => {\n            resetInputs();\n        });\n    }\n\n    return(\n        <PopupWithForm\n            title='Обновить аватар'\n            name='edit-avatar'\n            buttonTitle='Сохранить'\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup__input popup__input_type_link\" type=\"url\" placeholder=\"Ссылка на аватар\"\n                           name=\"avatar\" required autoComplete=\"off\" ref={inputRef}/>\n                    <span id='avatar-error'/>\n\n                </>\n            }\n        />\n    )\n\n}\n\nexport default EditAvatarPopup;\n","import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n\n    const [title, setTitle] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleChangeTitle(evt) {\n        setTitle(evt.target.value);\n    }\n\n    function handleChangeLink(evt) {\n        setLink(evt.target.value);\n    }\n\n    function resetInputs() {\n        console.log('Yes');\n        setTitle('');\n        setLink('');\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        const editPromise = onAddPlace({\n            name: title,\n            link: link\n        });\n\n        editPromise.finally(() => {\n            resetInputs();\n        });\n    }\n    \n    return(\n        <PopupWithForm\n            title='Новое место'\n            name='add-card'\n            buttonTitle='Сохранить'\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup__input popup__input_type_place\" type=\"text\" placeholder=\"Название\" name=\"place\"\n                           required minLength=\"1\" maxLength=\"30\" autoComplete=\"off\" onChange={handleChangeTitle}/>\n                    <span id='place-error'/>\n\n                    <input className=\"popup__input popup__input_type_link\" type=\"url\" placeholder=\"Ссылка на картинку\"\n                           name=\"link\" required autoComplete=\"off\" onChange={handleChangeLink}/>\n                    <span id='link-error'/>\n\n                </>\n            }\n        />\n    )\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport {api} from '../utils/api.js';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\n\nfunction App() {\n\n  const [cards, setCards] = React.useState([]);\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState('');\n\n  React.useEffect(() => {\n    const userInfo = api.getUserInfo();\n\n    userInfo\n        .then((userData) => {\n      setCurrentUser(userData);\n    })\n        .catch((err) => {\n          console.log(err + ' , нам очень жаль');\n        });\n  }, []);\n\n  const handleEditAvatarClick = ()=> {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = ()=> {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = ()=> {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (cardData) => {\n    setImagePopupOpen(true);\n    setSelectedCard(cardData)\n  };\n\n  const closeAllPopups = ()=> {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  };\n  \n  function handleUpdateUser(newDataOfUser) {\n    api.setEditedUserInfo(newDataOfUser)\n        .then((newUserData) => {\n          setCurrentUser(newUserData);\n          closeAllPopups();\n        })\n        .catch((err) => {\n          console.log(err + ' , нам очень жаль');\n        });\n\n  }\n  \n  function handleAddPlaceSubmit(newDataOfCard) {\n    const newPromise = api.addNewCard(newDataOfCard)\n        .then((newCardData) => {\n          setCards([...cards, newCardData]);\n        });\n    return newPromise;\n  }\n  \n  function handleUpdateAvatar(newDataOfAvatar) {\n    const newPromise = api.changeAvatar(newDataOfAvatar)\n        .then((newAvatarData) => {\n          setCurrentUser(newAvatarData);\n          closeAllPopups();\n        })\n        .catch((err) => {\n          console.log(err + ' , нам очень жаль');\n        });\n    return newPromise;\n  }\n\n  function handleCardLike({likes, _id}) {\n    const isLiked = likes.some(item => item._id === currentUser._id);\n    api.changeLikeCardStatus(_id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((item) => item._id === _id ? newCard : item);\n      // Обновляем стейт\n      setCards(newCards);\n    }) .catch((err) => {\n      console.log(err + ' , нам очень жаль');\n    });\n  }\n\n  function handleCardDelete(cardId) {\n    api.deleteCard(cardId).then(() => {\n      const newCards = cards.filter((item) => item._id !== cardId);\n      setCards(newCards);\n    }) .catch((err) => {\n      console.log(err + ' , нам очень жаль');\n    });\n  }\n\n  //изменение теукщего состояния массива карточек\n  const setCardData = (cardsData) => {\n    setCards(cardsData);\n  };\n\n  React.useEffect(() => {\n    const cardsInfo = api.getInitialCards();\n    cardsInfo\n        .then((initialCards) => {\n          setCardData(initialCards) //получение данных карточек с сервера и орисовка на страницу\n        })\n        .catch((err) => {\n          console.log(err + ' , нам очень жаль');\n        });\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n\n    <div className=\"page\">\n      <Header />\n\n      <div className=\"page__container\">\n\n        <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n        />\n\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n\n\n        <PopupWithForm\n            title='Вы уверены?'\n            name='confirm-delete'\n            buttonTitle='Да'\n        />\n\n        <ImagePopup card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups}/>\n\n      </div>\n\n    </div>\n\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}